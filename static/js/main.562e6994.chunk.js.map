{"version":3,"sources":["logo.svg","Navigation.js","functions/useFetch.js","Carousel.js","HeroCarousel.js","App.js","index.js"],"names":["Navigation","className","src","logo","alt","color","distance","direction","size","useFetch","url","useState","apiData","setApiData","serverError","setServerError","useEffect","fetchData","a","axios","get","response","data","CarouselItem","children","width","style","Carousel","activeIndex","setActiveIndex","updateIndex","newIndex","React","Children","count","interval","setInterval","clearInterval","handlers","useSwipeable","onSwipedLeft","onSwipedRight","transform","map","child","index","cloneElement","HeroCarousel","console","log","heroCarousel","heroText","ele","push","Object","entries","i","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.562e6994.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4ac60799.svg\";","import logo from './logo.svg';\nimport './Navigation.css'\nimport { Turn as Hamburger } from 'hamburger-react';\n\nfunction Navigation() {\n    return (\n        <div className=\"Navigation\">\n        <img src={logo} className=\"Brand-logo\" alt=\"logo\" />\n        <div className=\"Nav-right\">\n        <h1 className=\"contact\"> 212.555.5555 </h1>\n        <h1> LOGIN </h1>\n        <Hamburger className=\"hamburger\" color=\"#3f3f3f\" distance=\"sm\" direction=\"right\" size={19} />\n        </div>\n        \n        </div>\n    )\n}\n\nexport default Navigation\n","import {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\nconst useFetch = (url) => {\n    const [apiData, setApiData] = useState(null);\n    const [serverError, setServerError] = useState(null);\n  \n      useEffect (()=> {\n        const fetchData = async () => {\n          try {\n            const response = await axios.get(url);\n            setApiData(response.data);\n          } catch (error) {\n            setServerError(error);\n          }  \n        };\n        fetchData()\n        return () => {\n          fetchData()\n         }\n      },[url])\n    return { apiData, serverError };\n  };\n\n  export default useFetch;","import React, { useEffect, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\n\nimport \"./Carousel.css\";\n\nexport const CarouselItem = ({ children, width }) => {\n  return (\n    <div className=\"carousel-item\" style={{ width: width }}>\n      {children}\n    </div>\n  );\n};\n\nconst Carousel = ({ children }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  // const [paused, setPaused] = useState(false);\n\n  const updateIndex = (newIndex) => {\n    if (newIndex < 0) {\n      newIndex = React.Children.count(children) - 1;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = 0;\n    }\n\n    setActiveIndex(newIndex);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // if (!paused) {\n      //   updateIndex(activeIndex + 1);\n      // }\n \n        updateIndex(activeIndex + 1);\n      \n    }, 5000);\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  });\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => updateIndex(activeIndex + 1),\n    onSwipedRight: () => updateIndex(activeIndex - 1)\n  });\n\n  return (\n    <div\n      {...handlers}\n      className=\"carousel\"\n      // onMouseEnter={() => setPaused(true)}\n      // onMouseLeave={() => setPaused(false)}\n    >\n      <div\n        className=\"inner\"\n        style={{ transform: `translateX(-${activeIndex * 100}%)` }}\n      >\n        {React.Children.map(children, (child, index) => {\n          return React.cloneElement(child, { width: \"100%\" });\n        })}\n      </div>\n      <div className=\"indicators\">\n        {/* <button\n          onClick={() => {\n            updateIndex(activeIndex - 1);\n          }}\n        >\n          Prev\n        </button> */}\n        {React.Children.map(children, (child, index) => {\n          return (\n            <button\n              className={`${index === activeIndex ? \"active\" : \"\"}`}\n              // onClick={() => {\n              //   updateIndex(index);\n              // }}\n            >\n              {}\n            </button>\n          );\n        })}\n        {/* <button\n          onClick={() => {\n            updateIndex(activeIndex + 1);\n          }}\n        >\n          Next\n        </button> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import useFetch from './functions/useFetch';\nimport HeroImage from './HeroImage';\nimport './HeroCarousel.css';\nimport Carousel, { CarouselItem } from \"./Carousel\";\nimport './Carousel.css'\n\nfunction HeroCarousel() {\n     const { apiData, serverError } = useFetch('https://s0nshulo19.execute-api.us-east-1.amazonaws.com/default/code-challenge');\n     console.log(apiData)\n    \n    //  if (apiData) {\n    //     for (let i = 0; i < apiData['hero_slides'].length; i++) {\n    //         heroCarousel.push(<HeroImage key={i} url={apiData['hero_slides'][i]['image']} alt={apiData['hero_slides'][i]['alt']} text={apiData['hero_text']}/>)\n    //     }\n\n    //  }\n    // const heroCarousel = [];\n    //  if (apiData) {\n    //     for (let i = 0; i < apiData['hero_slides'].length; i++) {\n    //         heroCarousel.push(apiData['hero_slides'][i]['image'])\n    //     }\n    //  }\n\n    const heroCarousel = {};\n    const heroText = []\n    if (apiData) {\n        for (const ele of apiData['hero_slides']) {\n            if (!heroCarousel[ele[\"alt\"]]) {\n                heroCarousel[ele[\"alt\"]] = ele[\"image\"]\n            }\n        }\n         \n        heroText.push(apiData['hero_text'])\n    }\n    console.log(\"final\",heroCarousel)\n    console.log(\"text\", heroText[0])\n      \n    return (\n        <div className=\"hero\">\n            {/* handle loading and displaying images */}\n            { !apiData && <h1>Loading Images..</h1> }\n            {/* handle the erro if occured */}\n            { serverError && <h1 className =\"laoding-and-error\">Oops, sorry something went wrong..</h1> }\n            {/* { apiData &&  <Carousel>\n                <CarouselItem>1</CarouselItem>\n                <CarouselItem>2</CarouselItem>\n                </Carousel> } */}\n            \n            {/* use this */}\n            {/* {   apiData? \n                <Carousel>\n                <CarouselItem><img src={heroCarousel[0]}/></CarouselItem>\n                <CarouselItem><img src={heroCarousel[1]}/></CarouselItem>\n                <CarouselItem><img src={heroCarousel[2]}/></CarouselItem>\n                </Carousel> : <h1>Loading Images..</h1>\n            } */}\n            {/* <Carousel>\n            {heroCarousel.map((ele, i) =>  <CarouselItem><img alt={} src={ele} key={i}/></CarouselItem>)}\n            </Carousel> */}\n             \n            <Carousel>\n            { Object.entries(heroCarousel).map((ele,i) => <CarouselItem key={i}> <img alt={ele[0]} src={ele[1]}/></CarouselItem>) } \n            </Carousel>\n\n            { apiData && \n            <div className=\"Hero-text\">\n                <div id=\"title\">{heroText[0]['title']}</div> <br/> \n                <div id=\"date\">{heroText[0]['date']}</div> <br/> \n                <div id=\"subtitle\">{heroText[0]['subtitle']} </div>\n            </div> \n            }           \n            \n            {/* { apiData ? heroCarousel : <h1 className =\"laoding-and-error\"> Loading.. </h1>} */}\n          \n           \n        </div>\n    )\n}\n\nexport default HeroCarousel\n","import './App.css';\nimport Navigation from './Navigation'\nimport HeroCarousel from './HeroCarousel'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <HeroCarousel/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}